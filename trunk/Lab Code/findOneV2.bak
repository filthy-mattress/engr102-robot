//Motor ports
#define RIGHT_MOTOR OUT_A
#define LEFT_MOTOR OUT_C
#define BOTH_MOTORS OUT_AC
#define GATE_MOTOR OUT_B

//Motor speeds
#define MOVE_SPEED 75
#define GATE_SPEED 30

//Sensor ports
#define ULTRASONIC IN_1
#define TOUCH IN_2
#define MAGNETIC IN_3
#define LIGHT IN_4

//Sensor read macros
#define READ_ULTRASONIC Sensor(ULTRASONIC)
#define READ_TOUCH Sensor(TOUCH)
#define READ_MAGNETIC Sensor(MAGNETIC)
#define READ_LIGHT Sensor(LIGHT)

//Motor macros
#define motors(lspd,rspd) {OnFwd(LEFT_MOTOR,lspd);OnFwd(RIGHT_MOTOR,rspd);}
#define zp_turn_l(spd) motors(-(spd),spd);
#define zp_turn_r(spd) motors(spd,-(spd));

//Define constants
#define NEAR 45
#define NEAR2 8
#define NEARWALL 15
#define MAGNETISM 500
#define LIGHT_THRESHOLD 40

sub acquire(){
   // open gate
      OnFwd(GATE_MOTOR,30);
      Wait(1000);
      Off(GATE_MOTOR);

   // go forward
      OnFwd(BOTH_MOTORS, MOVE_SPEED);
      Wait(800);
      Off(BOTH_MOTORS);

   // Grip close gate
      OnRev(GATE_MOTOR,30);
      Wait(500);
      Off(GATE_MOTOR);
}

task main() {

// Init sensors
   SetSensorType(ULTRASONIC, SENSOR_TYPE_LOWSPEED);
   SetSensorType(TOUCH,SENSOR_TYPE_TOUCH);
   SetSensorHTMagnet(MAGNETIC);
   SetSensorType(IN_4,IN_TYPE_LIGHT_INACTIVE);
   SetSensorMode(IN_4,IN_MODE_PCTFULLSCALE);

// Move forward initially
   OnFwd(BOTH_MOTORS, MOVE_SPEED);
   Wait(1000);
   Off(BOTH_MOTORS);


// Main Loop
int MAIN_LOOP = 1;
while(true && MAIN_LOOP == 1){
   
// Spin around until object NEAR, then go close to object
   int SPIN_MODE = 1;
   zp_turn_l(30);
   while(true && SPIN_MODE == 1){
      if(SensorUS(ULTRASONIC)<NEAR){
         Off(BOTH_MOTORS);
         
         // Go to Object
         while(SensorUS(ULTRASONIC)>NEAR2){
              OnFwd(BOTH_MOTORS, MOVE_SPEED);
         }
         
         // end loop
         SPIN_MODE = 0;
      }

    }
    
// Check to see if both sides of object are empty
     int left_empty = 0;
     int right_empty = 0;
     
     // left
     zp_turn_r(30);
     Wait(600);
     Off(BOTH_MOTORS);
     if (SensorUS(ULTRASONIC)>NEAR){
        right_empty = 1;
     }
     
     // right
     zp_turn_l(30);
     Wait(1200);
     Off(BOTH_MOTORS);
     if (SensorUS(ULTRASONIC)>NEAR){
        left_empty = 1;
     }
     
// If both were empty then turn back to original facing and proceed
     if(left_empty == 1 && right_empty == 1) {
     
         // turn back other direction
         zp_turn_r(30);
         Wait(600);
         Off(BOTH_MOTORS);
         
         // get object
         acquire();
         
         // spin around and find light
         while (true && Sensor(LIGHT)<LIGHT_THRESHOLD){
             zp_turn_r(30);
         }
         
         // turn off motors once light found
         Off(BOTH_MOTORS);
         
         // if not magnetic back up 10 second
         if (SensorUS(ULTRASONIC)>MAGNETISM){ // change this back
             OnRev(BOTH_MOTORS, MOVE_SPEED);
             Wait(10000);
             Off(BOTH_MOTORS);
         }
         
         // if magnetic, proceed
         if (SensorUS(ULTRASONIC)<MAGNETISM){ // change this back
             // move forward until object hit
             int wall_looking = 1;

         // move to wall, check if wall
             while(true && wall_looking == 1){
                  while(SensorUS(ULTRASONIC)>NEARWALL){
                       OnFwd(BOTH_MOTORS, MOVE_SPEED);
                  }
                  
             // Check to see if either side of object are empty
                 left_empty = 0;
                 right_empty = 0;

                 // left
                 zp_turn_r(30);
                 Wait(200);
                 Off(BOTH_MOTORS);
                 if (SensorUS(ULTRASONIC)>NEAR){
                    left_empty = 1;
                 }

                 // right
                 zp_turn_l(30);
                 Wait(400);
                 Off(BOTH_MOTORS);
                 if (SensorUS(ULTRASONIC)>NEAR){
                    right_empty = 1;
                 }
                 
                 // if wall, stop looking for wall
                 if(left_empty == 0 && right_empty == 0) {
                     wall_looking = 0;
                 }
             }


         // Turn Left, see if ultrasonic value is increasing or decreasing
            int x = 10000;
            zp_turn_l(30);
            int countleft = 1;
            
           // until(SensorUS(ULTRASONIC) > x)
                 if (SensorUS(ULTRASONIC) < x){
                    x = SensorUS(ULTRASONIC);
                    Wait(1);
                    countleft = countleft + 1;
                    //zeropoint turn right 90 Degrees
                    //Go To End
                 }
                  zp_turn_r(30);
                  
                 if (countleft < 50){
                     zp_turn_r(30);
                     if (SensorUS(ULTRASONIC) < x){
                        x = SensorUS(ULTRASONIC);
                        Wait(1);
                     }
                 }


            
            
         // if increasing, then that's towards dropoff zone
            if(initial < final){
                // turn back until it increases again
                while(SensorUS(ULTRASONIC) < final){
                     zp_turn_r(30);
                }
                
                // stop turning
                Off(BOTH_MOTORS);
                
                // turn 90 degrees back in original direction
                zp_turn_l(30);
                Wait(800);
                Off(BOTH_MOTORS);
                
                // go forward until near again
                while(SensorUS(ULTRASONIC)>NEAR){
                       OnFwd(BOTH_MOTORS, MOVE_SPEED);
                }
                Off(BOTH_MOTORS);
                MAIN_LOOP = 0;

            }
            
            // if decreasing, then keep turning until it starts increasing, then turn away 90 degrees
            if(initial > final){
               while(SensorUS(ULTRASONIC) < initial){
                     zp_turn_l(30);
               }
                
               // stop turning
               Off(BOTH_MOTORS);
               
               // turn 90 degrees
               zp_turn_r(30);
               Wait(800);
               Off(BOTH_MOTORS);
                
               // go forward until near again
               while(SensorUS(ULTRASONIC)>NEAR){
                     OnFwd(BOTH_MOTORS, MOVE_SPEED);
               }
               Off(BOTH_MOTORS);
               MAIN_LOOP = 0;
            
            }

         
         }
         
         
         
     
     }

   
} // end main loop

} // end main
