//Competition code

//Motor ports
#define RIGHT_MOTOR OUT_A
#define LEFT_MOTOR OUT_C
#define BOTH_MOTORS OUT_AC
#define GATE_MOTOR OUT_B

//Motor speeds
#define MOVE_SPEED 75
#define GATE_SPEED 30

//Sensor ports
#define ULTRASONIC IN_1
#define TOUCH IN_2
#define MAGNETIC IN_3
#define LIGHT IN_4

//Sensor read macros
#define READ_ULTRASONIC SENSOR_1
#define READ_TOUCH SENSOR_2
#define READ_MAGNETIC SENSOR_3
#define READ_LIGHT SENSOR_4

//Motor macros
#define motors(lspd,rspd) {OnFwd(LEFT_MOTOR,lspd);OnFwd(RIGHT_MOTOR,rspd);}
#define zp_turn_l(spd) motors(-(spd),spd);
#define zp_turn_r(spd) motors(spd,-(spd));

void testMagnetic(){
     while(true){
          TextOut(5,LCD_LINE2,NumToStr(READ_MAGNETIC));
     }
}

void motorGoTo(byte read,long tick){
     //Figure out which way to go
     long start_tick= MotorTachoCount(read);
     zp_turn_l(MOVE_SPEED);
     Wait(10);
     Off(BOTH_MOTORS);
     //Test to see if closer
     if(abs(MotorTachoCount(read)-tick)<abs(start_tick-tick)){
          zp_turn_l(MOVE_SPEED);//Continue
     }else{
          zp_turn_r(MOVE_SPEED);//turn around
     }
     until(MotorTachoCount(read)==tick);
     Off(BOTH_MOTORS);
}

//Scan variables
struct scanPoint{
     int read;
     int pos;
};
scanPoint points[]={};
int reading_count=0;
bool run_scan=false;
bool scan_done=true;
byte scan_sensor=LIGHT;
byte scan_motor=RIGHT_MOTOR;

task scan(){
     run_scan=true;
     scan_done=false;
     //reset reading
     reading_count=0;
     scanPoint tmp[];
     while(run_scan){
          scanPoint pt;
          pt.read=Sensor(scan_sensor);
          pt.pos=MotorTachoCount(scan_motor);
          tmp[reading_count]=pt;
          reading_count++;
     }
     points=tmp;
     scan_done=true;
}
#define start_scan(s,m) {scan_sensor=s;scan_motor=m;StartTask(scan);}

void scan360(byte sensor, byte motor){
     start_scan(sensor,motor);
     zp_turn_l(MOVE_SPEED);
     Wait(1000);//TESTING REQUIRED!!
     Off(BOTH_MOTORS);
     run_scan=false;
     until(scan_done);
}

task main(){
     SetSensor(ULTRASONIC, SENSOR_TYPE_LOWSPEED);
     SetSensor(TOUCH,SENSOR_TYPE_TOUCH);
     SetSensorHTMagnet(MAGNETIC);
     SetSensor(LIGHT,SENSOR_TYPE_LIGHT);
     //TODO
}
